
// CREATE A STAGE TO CONNECT AWS S3 TO SNOWFLAKE.

CREATE OR REPLACE stage JSON_STAGE
URL='s3://bucketsnowflake-jsondemo';


// CREAT FILE FORMAT.

CREATE OR REPLACE FILE FORMAT JSON_FORMAT 
TYPE = JSON;


// CREATE TABLE TO STORE RAW DATA ACCESSED FROM S3.

CREATE TABLE OR REPLACE JSON_RAW(
RAW_FILE VARIANT
);


// LOAD ACCESSED DATA INTO CREATED TABLE.

COPY INTO JSON_RAW FROM @JSON_STAGE
FILE_FORMAT = JSON_FORMAT
FILES = ('HR_data.json');

SELECT * FROM JSON_RAW


// CREATE A TABLE TO STORE TRANSFORMED DATA.

CREATE OR REPLACE TABLE  HR_TRANSFORMED( 
ID  INTEGER,
FIRST_NAME  STRING,
TITLE   STRING,
SALARY  INTEGER,
GENDER  STRING,
CITY   STRING 
)


// TRANSFORM THE JSON DATA TO ACCESS INDIVIDUAL INFORMATION FROM IT AND LOAD INTO

INSERT INTO HR_TRANSFORMED
SELECT 
RAW_FILE:id:: INTEGER AS ID,
RAW_FILE:first_name:: STRING AS FIRST_NAME,
RAW_FILE:job:title:: STRING AS TITLE,
RAW_FILE:job:salary:: INTEGER AS SALARY,
RAW_FILE:gender:: STRING AS GENDER,
RAW_FILE:city:: STRING AS CITY,
FROM JSON_RAW


// HANDLE LANGUAGE DATA.
 
CREATE OR REPLACE TABLE Languages AS
select
RAW_FILE:id::STRING as ID,
f.value:language::STRING language,
f.value:level::STRING level
from JSON_RAW, table(flatten(RAW_FILE:spoken_languages)) f 


// HANDLE PREVIOUS JOB DATA.

 
CREATE OR REPLACE TABLE PREVIOUS_COMPANY AS
SELECT
RAW_FILE:id:: INTEGER AS ID,
P.VALUE:: STRING AS PREV_COMPANY
FROM JSON_RAW,TABLE(FLATTEN(RAW_FILE:prev_company)) AS P

SELECT * FROM PREVIOUS_COMPANY